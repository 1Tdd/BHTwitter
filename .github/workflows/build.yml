name: Build and Release BHTwitter

on:
  workflow_dispatch:
    inputs:
      sdk_version:
        description: "iOS SDK Version"
        default: "16.5"
        required: true
        type: string
      decrypted_ipa_url:
        description: "Direct URL of the decrypted X ipa"
        default: ""
        required: true
        type: string
      commit_id:
        description: "(Optional) Commit ID to build at"
        default: ""
        required: false
        type: string
      upload_artifact:
        description: "Upload iPA as artifact (Public)"
        default: false
        required: false
        type: boolean
      create_release:
        description: "Create a draft release (Private)"
        default: true
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build BHTwitter
    runs-on: macos-13
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v4
        with:
          path: main
          ref: ${{ github.event.inputs.commit_id || github.ref }}
          submodules: recursive

      - name: Install Dependencies
        run: brew install ldid dpkg make

      - name: Download Theos
        uses: actions/checkout@v4
        with:
          repository: theos/theos
          ref: master
          path: theos
          submodules: recursive

      - name: Download Azule
        uses: actions/checkout@v4
        with:
          repository: Al4ise/Azule
          ref: main
          path: azule

      - name: Add Azule command
        run: |
          ln -sf ${{ github.workspace }}/azule/azule /usr/local/bin/azule

      - name: iOS SDK Caching
        id: SDK
        uses: actions/cache@v4
        env:
          cache-name: iOS-${{ inputs.sdk_version }}-SDK
        with:
          path: theos/sdks/
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Download iOS SDK
        if: steps.SDK.outputs.cache-hit != 'true'
        run: |
          # Only download the specific SDK version
          git clone -n --depth=1 --filter=tree:0 https://github.com/theos/sdks/
          cd sdks
          git sparse-checkout set --no-cone iPhoneOS${{ inputs.sdk_version }}.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Fix Compiling
        run: |
          # Update GNU Make to allow for faster building
          echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH
          (echo export PATH="/usr/local/opt/make/libexec/gnubin:$PATH" >> ~/.bash_profile)
          source ~/.bash_profile

      - name: Prepare X iPA
        run: |
          # Download and unzip iPA
          wget "$IPA_URL" --no-verbose -O main/packages/com.atebits.Tweetie2.ipa
          unzip -q main/packages/com.atebits.Tweetie2.ipa -d main/tmp
          # Get the version number of the X app and store it
          echo "X_VERSION=$(grep -A 1 '<key>CFBundleShortVersionString</key>' main/tmp/Payload/Twitter.app/Info.plist | grep '<string>' | awk -F'[><]' '{print $3}')" >> $GITHUB_ENV
          # Get the version number of the latest release
          BHTWITTER_VERSION=$(wget --no-verbose -O- https://api.github.com/repos/BandarHL/BHTwitter/releases/latest | jq -r '.tag_name')
          echo "BHTWITTER_VERSION=${BHTWITTER_VERSION}" >> $GITHUB_ENV
          echo "$BHTWITTER_VERSION"
        env:
          THEOS: ${{ github.workspace }}/theos
          IPA_URL: ${{ inputs.decrypted_ipa_url }}

      - name: Build Package
        id: build_package
        run: |
          cd ${{ github.workspace }}/main
          # Replace lines in Makefile based on inputs
          sed -i '' "s/^TARGET.*$/TARGET := iphone:clang:${{ inputs.sdk_version }}:14.0/" Makefile
          # Build the package
          ./build.sh --sideloaded
          # Rename the package based on the version
          (mv "packages/$(ls -t packages | head -n1)" "packages/BHTwitter_${{ env.X_VERSION }}_${{ env.BHTWITTER_VERSION }}.ipa")
          # Pass package name to the upload step
          echo "package=$(ls -t packages | head -n1)" >> $GITHUB_OUTPUT
          # Print out the hash and bundle ID
          echo -e "==> \033[1mSHASUM256: $(shasum -a 256 packages/BHTwitter_*.ipa | cut -f1 -d' ')\033[0m"
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Upload Artifact
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: BHTwitter_${{ env.X_VERSION }}_${{ env.BHTWITTER_VERSION }}
          path: ${{ github.workspace }}/main/packages/${{ steps.build_package.outputs.package }}
          if-no-files-found: error

      - name: Prepare Release Notes
        if: ${{ inputs.create_release }}
        run: |
          export TODAY=$(date '+%Y-%m-%d')
          sed "s/%bhtwitter_version%/${{ env.BHTWITTER_VERSION }}/g; s/%x_version%/${{ env.X_VERSION }}/g; s/%date%/$TODAY/g" \
          main/.github/RELEASE_TEMPLATE/Release.md > ${{ github.workspace }}/release_notes.md

      - name: Create Draft Release
        if: ${{ inputs.create_release }}
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.X_VERSION }}-${{ env.BHTWITTER_VERSION }}
          name: v${{ env.X_VERSION }}-${{ env.BHTWITTER_VERSION }} - BHTwitter
          files: main/packages/${{ steps.build_package.outputs.package }}
          draft: true
          body_path: ${{ github.workspace }}/release_notes.md

      - name: Job Summary
        run: |
          echo -e '### ðŸ“º Build Complete' >> $GITHUB_STEP_SUMMARY

      - name: Job Summary - Artifact Upload
        if: ${{ inputs.upload_artifact }}
        run: |
          echo -e '### ðŸ“¦ Artifact Upload\n\nThe artifact was uploaded successfully! Refresh and [scroll down](#artifacts) to view the artifact. Note that you must be signed in to GitHub to download it.' >> $GITHUB_STEP_SUMMARY

      - name: Job Summary - Draft Release
        if: ${{ inputs.create_release }}
        run: |
          REPO_URL="https://github.com/${{ github.repository }}"
          RELEASES_URL="$REPO_URL/releases"
          echo -e '### ðŸš€ Draft Release\n\nThe release draft has been created successfully! You can view your releases here: '$RELEASES_URL >> $GITHUB_STEP_SUMMARY
